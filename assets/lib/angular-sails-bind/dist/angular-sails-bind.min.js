/*! angular-sails-bind - v1.0.3 - 2014-07-17
* https://github.com/diegopamio/angular-sails-bind
* Copyright (c) 2014 Diego Pamio; Licensed MIT */
function diff(a,b){return a.filter(function(a){return b.indexOf(a)<0})}var app=angular.module("ngSailsBind",[]);app.factory("$sailsBind",["$q","$rootScope",function(a,b){"use strict";var c=function(b,c,f){function g(){c.$watchCollection(b+"s",function(a,f){var g,h;a=a||[],f=f||[],g=diff(a,f),h=diff(f,a),h.forEach(function(a){e("/"+b+"?id="+a.id).then(function(c){c&&!c.error&&io.socket.delete("/"+b+"/destroy/"+a.id)})}),g.forEach(function(a){a.id||io.socket.put("/"+b+"/create/",a,function(c){e("/"+b+"/"+c.id).then(function(b){angular.extend(a,b)})})}),d(g,c,b)})}var h=new a.defer,i=e("/"+b,f);return i.then(function(a){Array.isArray(a)||(a=[a]),c[b+"s"]=a,d(a,c,b),g(),h.resolve()}),io.socket.on(b,function(a){var d=c[b+"s"],e={created:function(){c.$apply(function(){c[b+"s"].push(a.data)})},updated:function(){var b=d.find(function(b){return a.id==b.id});angular.extend(b,a.data)},destroyed:function(){var b=d.find(function(b){return a.id==b.id});b&&c.$apply(function(){d.splice(d.indexOf(b),1)})}};e[a.verb](),c.$apply()}),h.promise},d=function(a,b,c){a.forEach(function(a){b.$watchCollection(c+"s["+b[c+"s"].indexOf(a)+"]",function(a,b){b&&a&&(angular.equals(b,a)||b.id!=a.id||b.updatedAt!==a.updatedAt||io.socket.post("/"+c+"/update/"+b.id,angular.copy(a)))})})},e=function(c,d){var e=new a.defer;return d=d||{},io.socket.request(c,d,function(a){b.$apply(e.resolve(a))}),e.promise};return{bind:c}}]),Array.prototype.find||Object.defineProperty(Array.prototype,"find",{enumerable:!1,configurable:!0,writable:!0,value:function(a){if(null==this)throw new TypeError("Array.prototype.find called on null or undefined");if("function"!=typeof a)throw new TypeError("predicate must be a function");for(var b,c=Object(this),d=c.length>>>0,e=arguments[1],f=0;d>f;f++)if(f in c&&(b=c[f],a.call(e,b,f,c)))return b;return void 0}}),Array.isArray||(Array.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)});